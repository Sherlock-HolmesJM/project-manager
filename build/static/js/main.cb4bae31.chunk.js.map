{"version":3,"sources":["components/common/tableBody.tsx","components/common/tableHeader.tsx","components/common/table.tsx","components/common/lottieAnimation.tsx","services/authService.ts","components/projectsTable.tsx","components/common/searchBox.tsx","components/common/pagination.tsx","components/common/listGroup.tsx","services/httpService.ts","services/logService.ts","store/projects.ts","services/projectService.ts","store/projectTypes.ts","services/typeService.ts","utils/paginate.ts","utils/sort.ts","components/projects.tsx","components/navBar.tsx","components/common/input.tsx","components/common/select.tsx","components/projectForm.tsx","utils/idGenerator.ts","components/common/form.tsx","components/userProfile.tsx","components/login.tsx","components/logout.tsx","components/error.tsx","App.tsx","store/entities.ts","store/reducer.ts","index.tsx","services/config.ts","store/configureStore.ts","services/authConfig.ts"],"names":["TableBody","getProperty","item","path","split","reduce","acc","next","renderCell","column","content","rand","Math","random","this","props","data","columns","className","map","index","key","React","Component","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","onClick","label","Wrapper","styled","div","Table","width","LottieAnimation","animationData","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","options","auth","loginWithRedirect","logout","returnTo","window","location","origin","user","name","isAdmin","namespace","ProjectsTable","project","to","id","title","deleteContent","onDelete","getCurrentUser","projects","length","removeTitleLink","SearchBox","query","onSearch","type","placeholder","value","onChange","e","currentTarget","Paginate","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","limit","start","range","Array","keys","splice","p","ListGroup","onItemSelect","items","selectedItem","idProperty","textProperty","classes","http","fs","firebase","firestore","log","message","console","toast","error","slice","createSlice","initialState","reducers","projectAdded","state","action","push","payload","projectUpdated","findIndex","projectDeleted","filter","projectsAdded","projectsCleared","actions","getReference","collection","dispatchAction","dispatch","a","get","then","docs","forEach","doc","ref","delete","catch","objects","getAll","result","add","set","update","lastModified","Date","now","remove","registerListener","onSnapshot","snapshot","docChanges","info","change","clear","devSeed","typesAdded","types","typesCleared","paginate","pageNumber","end","sort","paths","b","n","m","sortNum","sortString","localeCompare","Projects","searchQuery","selectedType","unsubscribe","handleSort","setState","handleSearch","handlePageChange","page","handleDelete","projectService","handleItemSelect","getPagedData","filtered","toLowerCase","includes","sorted","totalCount","projectCount","typeService","RowColumn","connect","entities","NavBar","Fragment","Input","rest","htmlFor","Select","ProjectForm","typeId","author","regNo","session","createdAt","errors","schema","Joi","string","min","required","number","mapProjectToData","mapTypeToOption","history","match","params","find","round","toUpperCase","mapDataToProject","onSubmit","handleSubmit","renderInput","renderSelect","renderButton","validate","abortEarly","details","validateProperty","object","handleChange","input","errorMessage","preventDefault","doSubmit","property","disabled","UserProfile","Login","login","Logout","ErrorPage","App","AOS","init","setAuth","useAuth0","component","exact","Profile","from","combineReducers","projectsReducer","typesReducer","entitiesReducer","initializeApp","apiKey","process","REACT_APP_FB_apikey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","configureStore","reducer","ReactDOM","render","StrictMode","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.cb4bae31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Column from \"../../types/column\";\r\n\r\nexport interface TableBodyProps {\r\n  data: any[];\r\n  columns: Column[];\r\n}\r\n\r\nexport interface TableBodyState {}\r\n\r\nclass TableBody extends React.Component<TableBodyProps, TableBodyState> {\r\n  getProperty = (item: any, path: string) => {\r\n    const paths = path.split(\".\");\r\n\r\n    return paths.reduce((acc, next) => acc[next], item);\r\n  };\r\n\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return this.getProperty(item, column.path);\r\n  };\r\n\r\n  rand = () => Math.random() * 1000;\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody className=\"tbody\">\r\n        {data.map((item, index) => (\r\n          <tr key={index} className=\"tbody__tr\">\r\n            {columns.map((column) => (\r\n              <td\r\n                key={item.path || item.key}\r\n                className=\"tbody__td\"\r\n                data-aos=\"fade-zoom-in\"\r\n                data-aos-easing=\"ease-in-back\"\r\n                data-aos-offset=\"0\"\r\n                data-aos-delay={index === 0 ? 0 : index * 50}\r\n                data-aos-duration={index === 0 ? 300 : 1000}\r\n              >\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\n\r\nimport SortColumn from \"../../types/sortColumn\";\r\nimport Column from \"../../types/column\";\r\n\r\nexport interface TableHeaderProps {\r\n  columns: Column[];\r\n  sortColumn: SortColumn;\r\n  onSort: (sortColumn: SortColumn) => void;\r\n}\r\n\r\nexport interface TableHeaderState {}\r\n\r\nclass TableHeader extends React.Component<TableHeaderProps, TableHeaderState> {\r\n  raiseSort = (path: string) => {\r\n    let sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else sortColumn = { path, order: \"asc\" };\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              key={column.path || column.key}\r\n              className=\"clickable\"\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import styled from \"styled-components\";\r\n\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nimport Column from \"../../types/column\";\r\nimport SortColumn from \"../../types/sortColumn\";\r\n\r\nexport interface TableProps {\r\n  data: any;\r\n  columns: Column[];\r\n  sortColumn: SortColumn;\r\n  onSort: (sortColumn: SortColumn) => void;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ columns, sortColumn, data, onSort }) => {\r\n  return (\r\n    <Wrapper>\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          onSort={onSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </table>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  min-width: 300px;\r\n  overflow-x: hidden;\r\n  border-radius: 7px;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px; // This line is not working. I don't know why.\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: white;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #b5c6e0;\r\n  }\r\n\r\n  .table {\r\n    min-width: 800px;\r\n    height: 300px;\r\n  }\r\n\r\n  .thead {\r\n    /* background-color: #007bff; */\r\n    background-color: #0d41e1;\r\n    color: white;\r\n  }\r\n\r\n  .tbody {\r\n    border: 5px solid #b5c6e0;\r\n  }\r\n\r\n  .tbody__tr:nth-child(odd) .tbody__td {\r\n    color: black;\r\n    background-color: #b5c6e0;\r\n  }\r\n\r\n  .tbody__tr:nth-child(even) .tbody__td {\r\n    background-color: #ebf4f5;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport default Table;\r\n","import Lottie from \"react-lottie\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  animationData: any;\r\n  width: number;\r\n  loop?: boolean;\r\n}\r\n\r\nfunction LottieAnimation(props: Props) {\r\n  const { animationData, width, loop = false } = props;\r\n\r\n  const defaultOptions = {\r\n    loop,\r\n    autoplay: true,\r\n    animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Wrapper width={width}>\r\n      <div className=\"lottie\">\r\n        <Lottie options={defaultOptions} />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div<{ width: number }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 4px solid #b5c6e0;\r\n\r\n  .lottie {\r\n    min-width: 300px;\r\n    width: ${(props) => props.width + \"%\"};\r\n  }\r\n`;\r\n\r\nexport default LottieAnimation;\r\n","import { Auth0ContextInterface } from \"@auth0/auth0-react\";\r\n\r\nimport User from \"../types/user\";\r\n\r\nclass AuthService {\r\n  private auth: Auth0ContextInterface = {} as any;\r\n\r\n  setAuth(auth: Auth0ContextInterface) {\r\n    this.auth = auth;\r\n  }\r\n\r\n  login() {\r\n    this.auth.loginWithRedirect();\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout({ returnTo: window.location.origin });\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    const { user } = this.auth;\r\n    const namespace = \"http://localhost/\";\r\n\r\n    if (!user) return null;\r\n\r\n    return {\r\n      name: user.name,\r\n      isAdmin: user[namespace + \"isAdmin\"],\r\n    };\r\n  }\r\n}\r\n\r\nconst auth = new AuthService();\r\n\r\nexport default auth;\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Table from \"./common/table\";\r\nimport LottieAnimation from \"./common/lottieAnimation\";\r\n\r\nimport Column from \"../types/column\";\r\nimport Project from \"../types/project\";\r\nimport SortColumn from \"../types/sortColumn\";\r\n\r\nimport auth from \"../services/authService\";\r\n\r\nimport animationData from \"../media/noDataFound.json\";\r\n\r\nexport interface ProjectsTableProps {\r\n  projects: Project[];\r\n  sortColumn: SortColumn;\r\n  onSort: (e) => void;\r\n  onDelete: (project: Project) => void;\r\n}\r\n\r\nexport interface ProjectsTableState {}\r\n\r\nclass ProjectsTable extends Component<ProjectsTableProps, ProjectsTableState> {\r\n  columns: Column[] = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (project: Project) => (\r\n        <Link to={`/projectForm/${project.id}`}>{project.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"type.name\", label: \"Type\" },\r\n    { path: \"author\", label: \"Author\" },\r\n    { path: \"regNo\", label: \"Reg. No.\" },\r\n    { path: \"session\", label: \"Session\" },\r\n    {\r\n      key: \"delete\",\r\n      content: this.deleteContent(this.props.onDelete),\r\n    },\r\n  ];\r\n\r\n  deleteContent(onDelete) {\r\n    return function (project: Project) {\r\n      return auth.getCurrentUser()?.isAdmin ? (\r\n        <button\r\n          onClick={() => onDelete(project)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ) : null;\r\n    };\r\n  }\r\n\r\n  removeTitleLink() {\r\n    if (!auth.getCurrentUser()?.isAdmin) {\r\n      delete this.columns[0].content;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sortColumn, onSort, projects } = this.props;\r\n\r\n    // if (projects.length === 0) return <div>Oops... hi</div>;\r\n    if (projects.length === 0)\r\n      return <LottieAnimation animationData={animationData} width={60} loop />;\r\n\r\n    this.removeTitleLink();\r\n\r\n    return (\r\n      <Table\r\n        data={projects}\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsTable;\r\n","export interface SearchBoxProps {\r\n  query: string;\r\n  onSearch: (query: string) => void;\r\n}\r\n\r\nconst SearchBox: React.FC<SearchBoxProps> = ({ query, onSearch }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={query}\r\n      onChange={(e) => onSearch(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","export interface Props {\r\n  itemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChange: (page: number) => void;\r\n}\r\n\r\nconst range = (limit: number, start = 1) => {\r\n  const range = [...new Array(limit + start).keys()];\r\n  range.splice(0, 1);\r\n  return range;\r\n};\r\n\r\nconst Paginate: React.FC<Props> = (props) => {\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = range(pagesCount);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pages.map((p) => (\r\n          <li\r\n            key={p}\r\n            className={'page-item' + (p === currentPage ? ' active' : '')}\r\n          >\r\n            <button onClick={() => onPageChange(p)} className='page-link'>\r\n              {p}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","interface Props {\r\n  items: any[];\r\n  selectedItem: any;\r\n  idProperty?: string;\r\n  textProperty?: string;\r\n  onItemSelect: (item: any) => void;\r\n}\r\n\r\nconst ListGroup: React.FC<Props> = (props) => {\r\n  const {\r\n    onItemSelect,\r\n    items,\r\n    selectedItem,\r\n    idProperty = \"id\",\r\n    textProperty = \"name\",\r\n  } = props;\r\n\r\n  const classes = (item) => {\r\n    return selectedItem === item\r\n      ? \"list-group-item active clickable\"\r\n      : \"list-group-item clickable\";\r\n  };\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item, index) => (\r\n        <li\r\n          key={item[idProperty]}\r\n          className={classes(item)}\r\n          onClick={() => onItemSelect(item)}\r\n          data-aos=\"fade-zoom-in\"\r\n          data-aos-easing=\"ease-in-back\"\r\n          data-aos-offset=\"0\"\r\n          data-aos-delay={index === 0 ? 0 : index * 50}\r\n          data-aos-duration={index === 0 ? 300 : 1000}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst http = {\r\n  fs: firebase.firestore,\r\n};\r\n\r\nexport default http;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function log(...message) {\r\n  console.log(...message);\r\n  toast.error(message);\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"projects\",\r\n  initialState: [],\r\n  reducers: {\r\n    projectAdded: (state, action) => {\r\n      state.push(action.payload.project);\r\n    },\r\n\r\n    projectUpdated: (state, action) => {\r\n      const index = state.findIndex((p) => p.id === action.payload.project.id);\r\n      state[index] = action.payload.project;\r\n    },\r\n\r\n    projectDeleted: (state, action) => {\r\n      return state.filter((p) => p.id !== action.payload.project.id);\r\n    },\r\n\r\n    projectsAdded: (state, action) => {\r\n      return action.payload.projects;\r\n    },\r\n\r\n    projectsCleared: (state, action) => {\r\n      return [];\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const {\r\n  projectAdded,\r\n  projectDeleted,\r\n  projectUpdated,\r\n  projectsAdded,\r\n  projectsCleared,\r\n} = slice.actions;\r\n\r\nexport const projectSelector = (state) => ({\r\n  projects: state.entities.projects,\r\n});\r\n","import { toast } from \"react-toastify\";\r\nimport Project from \"../types/project\";\r\nimport http from \"./httpService\";\r\nimport log from \"./logService\";\r\nimport dispatch from \"..\";\r\nimport {\r\n  projectAdded,\r\n  projectDeleted,\r\n  projectUpdated,\r\n  projectsAdded,\r\n  projectsCleared,\r\n} from \"../store/projects\";\r\n\r\nconst apiEndpoint = \"projects\";\r\nconst getReference = () => http.fs().collection(apiEndpoint);\r\n\r\nconst dispatchAction = (action, payload) => {\r\n  dispatch({ type: action.type, payload });\r\n};\r\n\r\n// Delete any time. Same with devSeed@typeService.\r\nfunction devSeed(projects: Project) {\r\n  dispatchAction(projectsAdded, { projects });\r\n  return toast.info(`Projects loaded`);\r\n}\r\n\r\nfunction registerListener() {\r\n  const unsubscribe = getReference().onSnapshot({\r\n    next: (snapshot) => {\r\n      const docs = snapshot.docChanges();\r\n\r\n      if (docs.length > 1 && docs[0].type === \"added\") {\r\n        const projects = docs.map((value) => value.doc.data());\r\n        dispatchAction(projectsAdded, { projects });\r\n        return toast.info(`Projects loaded`);\r\n      }\r\n\r\n      docs.forEach((change) => {\r\n        const { type, doc } = change;\r\n        const project = doc.data();\r\n\r\n        if (type === \"added\") dispatchAction(projectAdded, { project });\r\n        else if (type === \"modified\")\r\n          dispatchAction(projectUpdated, { project });\r\n        else if (type === \"removed\")\r\n          dispatchAction(projectDeleted, { project });\r\n\r\n        type === \"added\"\r\n          ? toast.info(\"Congratulation!\")\r\n          : toast.info(`Project ${type}`);\r\n      });\r\n    },\r\n    error: (error) => log(error),\r\n  });\r\n\r\n  return unsubscribe;\r\n}\r\n\r\nfunction getAll() {\r\n  return getReference()\r\n    .get()\r\n    .then((result) => result.docs.map((doc) => doc.data()))\r\n    .catch(log);\r\n}\r\n\r\nfunction get(id: string) {\r\n  return getReference()\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => doc.data() as Project)\r\n    .catch(log);\r\n}\r\n\r\nfunction add(project: Project) {\r\n  return getReference()\r\n    .doc(project.id)\r\n    .set(project)\r\n    .then((doc) => project)\r\n    .catch(log);\r\n}\r\n\r\nfunction update(project: Project) {\r\n  return getReference()\r\n    .doc(project.id)\r\n    .update({ ...project, lastModified: Date.now() })\r\n    .then((doc) => project)\r\n    .catch(log);\r\n}\r\n\r\nfunction remove(id: string) {\r\n  return getReference().doc(id).delete().catch(log);\r\n}\r\n\r\nasync function clear() {\r\n  dispatch({ type: projectsCleared.type });\r\n\r\n  return getReference()\r\n    .get()\r\n    .then((value) => value.docs.forEach((doc) => doc.ref.delete()))\r\n    .catch(log);\r\n}\r\n\r\nconst objects = {\r\n  get,\r\n  getAll,\r\n  add,\r\n  update,\r\n  remove,\r\n  registerListener,\r\n  clear,\r\n  devSeed,\r\n};\r\n\r\nexport default objects;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"types\",\r\n  initialState: [],\r\n  reducers: {\r\n    typesAdded: (state, action) => {\r\n      return action.payload.types;\r\n    },\r\n\r\n    typesCleared: (state, action) => {\r\n      return [];\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const { typesAdded, typesCleared } = slice.actions;\r\n","import ProjectType from \"../types/projectType\";\r\nimport http from \"./httpService\";\r\nimport log from \"./logService\";\r\nimport { typesAdded, typesCleared } from \"../store/projectTypes\";\r\nimport dispatch from \"..\";\r\n\r\nconst apiEndpoint = \"projectTypes\";\r\nconst getReference = () => http.fs().collection(apiEndpoint);\r\n\r\n// Delete any time. Same with devSeed@projectService.\r\nfunction devSeed(types: ProjectType[]) {\r\n  dispatch({ type: typesAdded.type, payload: { types } });\r\n}\r\n\r\nfunction add(type: ProjectType) {\r\n  getReference().doc(type.id).set(type).catch(log);\r\n}\r\n\r\nasync function getAll() {\r\n  try {\r\n    const result = await getReference().get();\r\n    const types = result.docs.map((doc) => doc.data());\r\n    dispatch({ type: typesAdded.type, payload: { types } });\r\n    return types as ProjectType[];\r\n  } catch (error) {\r\n    log(error);\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction get(id: string) {\r\n  return getReference()\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => doc.data() as ProjectType)\r\n    .catch(log);\r\n}\r\n\r\nasync function clear() {\r\n  dispatch({ type: typesCleared.type });\r\n\r\n  return getReference()\r\n    .get()\r\n    .then((value) => value.docs.forEach((doc) => doc.ref.delete()))\r\n    .catch(log);\r\n}\r\n\r\nconst objects = {\r\n  get,\r\n  getAll,\r\n  add,\r\n  clear,\r\n  devSeed,\r\n};\r\n\r\nexport default objects;\r\n","export const paginate = (\r\n  items: any[],\r\n  pageNumber: number,\r\n  pageSize: number\r\n) => {\r\n  const start = (pageNumber - 1) * pageSize;\r\n  const end = pageSize * pageNumber;\r\n  return items.slice(start, end);\r\n};\r\n","export const sort = (items: any[], path: string, order: string) => {\r\n  const paths = path.split(\".\");\r\n\r\n  return [...items].sort((a, b) => {\r\n    const n = paths.reduce((acc, path) => acc[path], a);\r\n    const m = paths.reduce((acc, path) => acc[path], b);\r\n\r\n    if (typeof n === \"number\") return sortNum(n, m, order);\r\n    if (typeof n === \"string\") return sortString(n, m, order);\r\n\r\n    return 1;\r\n  });\r\n};\r\n\r\nconst sortString = (a: string, b: string, order: string) => {\r\n  if (order === \"asc\") return a.localeCompare(b);\r\n\r\n  return b.localeCompare(a);\r\n};\r\n\r\nconst sortNum = (a: number, b: number, order: string) => {\r\n  if (order === \"asc\") return a - b;\r\n\r\n  return b - a;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ProjectsTable from \"./projectsTable\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport Paginate from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\n\r\nimport Project from \"../types/project\";\r\nimport ProjectType from \"../types/projectType\";\r\nimport SortColumn from \"../types/sortColumn\";\r\n\r\nimport projectService from \"../services/projectService\";\r\nimport typeService from \"../services/typeService\";\r\n\r\nimport auth from \"../services/authService\";\r\n\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { sort } from \"../utils/sort\";\r\n\r\nimport seed from \"../seed\";\r\n\r\ninterface ProjectsProps {\r\n  projects: Project[];\r\n  types: ProjectType[];\r\n}\r\n\r\ninterface ProjectsState {\r\n  sortColumn: SortColumn;\r\n  searchQuery: string;\r\n  currentPage: number;\r\n  pageSize: number;\r\n  selectedType: ProjectType;\r\n  unsubscribe: () => void;\r\n  types: ProjectType[];\r\n}\r\n\r\nclass Projects extends React.Component<ProjectsProps, ProjectsState> {\r\n  state = {\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n    pageSize: 3,\r\n    currentPage: 1,\r\n    selectedType: { id: \"\", name: \"All Types\" },\r\n    types: [],\r\n    unsubscribe: () => \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { length: projectCount } = this.props.projects;\r\n    const { length: typeCount } = this.props.types;\r\n\r\n    const types = typeCount ? this.props.types : await typeService.getAll();\r\n\r\n    if (!projectCount) projectService.registerListener();\r\n\r\n    this.setState({ types: [this.state.selectedType, ...types] });\r\n  }\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      selectedType: { id: \"\", name: \"All Types\" },\r\n    });\r\n  };\r\n\r\n  handlePageChange = (page: number) => {\r\n    this.setState({ currentPage: page, searchQuery: \"\" });\r\n  };\r\n\r\n  handleDelete = (project: Project) => {\r\n    projectService.remove(project.id);\r\n  };\r\n\r\n  handleItemSelect = (item) => {\r\n    this.setState({ selectedType: item, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const { searchQuery, pageSize, currentPage, selectedType, sortColumn } =\r\n      this.state;\r\n\r\n    const { projects } = this.props;\r\n\r\n    const filtered = searchQuery\r\n      ? projects.filter((p) =>\r\n          p.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      : selectedType.id\r\n      ? projects.filter((p) => p.type.id === selectedType.id)\r\n      : projects;\r\n\r\n    const sorted = sort(filtered, sortColumn.path, sortColumn.order);\r\n\r\n    return {\r\n      totalCount: filtered.length,\r\n      data: paginate(sorted, currentPage, pageSize),\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      sortColumn,\r\n      searchQuery,\r\n      pageSize,\r\n      currentPage,\r\n      selectedType,\r\n      types,\r\n    } = this.state;\r\n\r\n    const { data, totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"row\">\r\n          <RowColumn className=\"col-3\">\r\n            <ListGroup\r\n              items={types}\r\n              selectedItem={selectedType}\r\n              onItemSelect={this.handleItemSelect}\r\n            />\r\n          </RowColumn>\r\n\r\n          <div className=\"col\">\r\n            {auth.getCurrentUser()?.isAdmin && (\r\n              <div className=\"btn btn-group\">\r\n                <Link to=\"/projectForm/new\" className=\"btn btn-primary\">\r\n                  New Project\r\n                </Link>\r\n                {/* <button className=\"btn btn-danger\" onClick={() => seed()}>\r\n                  Seed\r\n                </button> */}\r\n              </div>\r\n            )}\r\n\r\n            <SearchBox query={searchQuery} onSearch={this.handleSearch} />\r\n\r\n            <ProjectsTable\r\n              projects={data}\r\n              sortColumn={sortColumn}\r\n              onSort={this.handleSort}\r\n              onDelete={this.handleDelete}\r\n            />\r\n\r\n            <Paginate\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              itemsCount={totalCount}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RowColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  max-height: 85vh;\r\n  min-width: 250px;\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.entities.projects,\r\n  types: state.entities.types,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Projects);\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nexport interface NavBarProps {\r\n  user: any;\r\n}\r\n\r\nconst NavBar: React.FC<NavBarProps> = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Project Manager\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink className=\"nav-link nav-item\" to=\"/projects\">\r\n              Projects\r\n            </NavLink>\r\n            {!user && (\r\n              <NavLink className=\"nav-link nav-item\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <NavLink className=\"nav-link nav-item\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n                <NavLink className=\"nav-link nav-item\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export interface InputProps {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  error?: string;\r\n  type?: string;\r\n  onChange: (e) => void;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} id={name} name={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export type SelectOption = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport interface SelectProps {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  error?: string;\r\n  options: SelectOption[];\r\n  onChange: (e) => void;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = (props) => {\r\n  const { name, label, error, options, ...rest } = props;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select id={name} name={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(({ value, label }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import Joi from \"joi\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Project from \"../types/project\";\r\nimport Form from \"./common/form\";\r\n\r\nimport ProjectType from \"../types/projectType\";\r\nimport SelectOption from \"../types/selectOption\";\r\n\r\nimport projectService from \"../services/projectService\";\r\nimport auth from \"../services/authService\";\r\n\r\nimport generatorId from \"../utils/idGenerator\";\r\n\r\nclass ProjectForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      typeId: \"\",\r\n      author: \"\",\r\n      regNo: \"\",\r\n      session: \"\",\r\n      createdAt: 0,\r\n    },\r\n    options: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string().min(3).label(\"Title\").required(),\r\n    typeId: Joi.string().label(\"Type of Project\").required(),\r\n    author: Joi.string().min(3).label(\"Name of Student\").required(),\r\n    regNo: Joi.string().min(9).label(\"Registration Number\").required(),\r\n    session: Joi.string().min(9).label(\"Session\").required(),\r\n    createdAt: Joi.number(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!auth.getCurrentUser()?.isAdmin)\r\n      return this.props.history.push(\"/projects\");\r\n\r\n    const { projects, types } = this.props;\r\n    const { id } = this.props.match.params;\r\n\r\n    this.setState({ options: types.map(this.mapTypeToOption) });\r\n\r\n    if (id === \"new\") return;\r\n\r\n    const project = projects.find((p) => p.id === id);\r\n\r\n    if (!project) return this.props.history.push(\"/projects\");\r\n\r\n    this.setState({ data: this.mapProjectToData(project) });\r\n  }\r\n\r\n  mapProjectToData = (project: Project) => {\r\n    const data = { ...project, typeId: project.type.id };\r\n\r\n    delete data.type;\r\n    delete data.id;\r\n    delete data.lastModified;\r\n\r\n    return data;\r\n  };\r\n\r\n  mapTypeToOption = (type: ProjectType): SelectOption => ({\r\n    value: type.id,\r\n    label: type.name,\r\n  });\r\n\r\n  mapDataToProject(): Project {\r\n    const { author, title, session, regNo, typeId, createdAt } =\r\n      this.state.data;\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const type = this.props.types.find((type) => type.id === typeId);\r\n\r\n    return {\r\n      id: id === \"new\" ? generatorId() : id,\r\n      title,\r\n      author,\r\n      regNo: regNo.toUpperCase(),\r\n      type,\r\n      session,\r\n      createdAt: createdAt ? createdAt : Date.now(),\r\n      lastModified: Date.now(),\r\n    };\r\n  }\r\n\r\n  doSubmit() {\r\n    const { id } = this.props.match.params;\r\n\r\n    if (id === \"new\") projectService.add(this.mapDataToProject());\r\n    else projectService.update(this.mapDataToProject());\r\n\r\n    this.props.history.push(\"/projects\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1>Project Form</h1>\r\n\r\n        {this.renderInput(\"title\", \"Title\")}\r\n        {this.renderSelect(\"typeId\", \"Type\", this.state.options)}\r\n        {this.renderInput(\"author\", \"Name of Student\")}\r\n        {this.renderInput(\"regNo\", \"Registration Number\")}\r\n        {this.renderInput(\"session\", \"Session\")}\r\n        {this.renderButton(\"Save\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  types: state.entities.types,\r\n  projects: state.entities.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProjectForm);\r\n","export default function generatorId() {\r\n  return \"i\" + Date.now() + Math.round(Math.random() * 1000) + \"d\";\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Input from \"./input\";\r\nimport Select, { SelectOption } from \"./select\";\r\n\r\nexport interface FormProps {}\r\n\r\nexport interface FormState {}\r\n\r\nclass Form extends React.Component<RouteComponentProps, FormState> {\r\n  state = { data: {}, errors: {} };\r\n\r\n  schema = {};\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = { ...this.state.errors };\r\n\r\n    for (const item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const object = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(object, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    const { name, type, value } = input;\r\n\r\n    if (errorMessage) errors[name] = errorMessage;\r\n    else delete errors[name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[name] = type === \"number\" ? +value : value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  setErrorProperty(property: string, message) {\r\n    const errors = { ...this.state.errors };\r\n    errors[property] = message;\r\n    this.setState({ errors });\r\n  }\r\n\r\n  doSubmit() {}\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={!!this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options: SelectOption[]) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        options={options}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import auth from \"../services/authService\";\r\ninterface Props {}\r\n\r\nfunction UserProfile(props: Props) {\r\n  // const {} = props;\r\n\r\n  console.log(auth.getCurrentUser());\r\n\r\n  return <h1>User Profile</h1>;\r\n}\r\n\r\nexport default UserProfile;\r\n","import auth from \"../services/authService\";\r\n\r\nfunction Login() {\r\n  auth.login();\r\n\r\n  return null;\r\n}\r\n\r\nexport default Login;\r\n","import auth from \"../services/authService\";\r\n\r\nfunction Logout() {\r\n  auth.logout();\r\n\r\n  return null;\r\n}\r\n\r\nexport default Logout;\r\n","import LottieAnimation from \"./common/lottieAnimation\";\r\n\r\nimport animationData from \"../media/pageError.json\";\r\n\r\nfunction ErrorPage() {\r\n  return <LottieAnimation animationData={animationData} width={70} loop />;\r\n}\r\n\r\nexport default ErrorPage;\r\n","// Third-party libraries\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport AOS from \"aos\";\n\n// Components\nimport Projects from \"./components/projects\";\nimport NavBar from \"./components/navBar\";\nimport ProjectForm from \"./components/projectForm\";\nimport Profile from \"./components/userProfile\";\nimport Login from \"./components/login\";\nimport Logout from \"./components/logout\";\nimport ErrorPage from \"./components/error\";\n\n// Services\nimport auth from \"./services/authService\";\n\n// Styles\nimport \"./App.css\";\n\nfunction App() {\n  AOS.init();\n  auth.setAuth(useAuth0());\n\n  const user = auth.getCurrentUser();\n\n  return (\n    <div className=\"App\">\n      <main className=\"container\">\n        <NavBar user={user} />\n\n        <Switch>\n          <Route path=\"/projectForm/:id\" component={ProjectForm} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/error\" component={ErrorPage} />\n\n          <Redirect exact from=\"/\" to=\"/projects\" />\n          <Redirect to=\"/error\" />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport projectsReducer from \"./projects\";\r\nimport typesReducer from \"./projectTypes\";\r\n\r\nexport default combineReducers({\r\n  projects: projectsReducer,\r\n  types: typesReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport entitiesReducer from \"./entities\";\r\n\r\nexport default combineReducers({\r\n  entities: entitiesReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n// import reportWebVitals from './reportWebVitals';\n\nimport App from \"./App\";\n\nimport configureAppStore from \"./store/configureStore\";\nimport getConfig from \"./services/config\";\nimport getAuthConfig from \"./services/authConfig\";\n\n// styles\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"aos/dist/aos.css\";\nimport \"./index.css\";\n\nfirebase.initializeApp(getConfig());\n\nconst store = configureAppStore();\n\nexport default store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider {...getAuthConfig()}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","export default function getConfig() {\r\n  return {\r\n    apiKey: process.env.REACT_APP_FB_apikey,\r\n    authDomain: process.env.REACT_APP_FB_authDomain,\r\n    projectId: process.env.REACT_APP_FB_projectId,\r\n    storageBucket: process.env.REACT_APP_FB_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_FB_messagingSenderId,\r\n    appId: process.env.REACT_APP_FB_appId,\r\n  };\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default function configureAppStore() {\r\n  return configureStore({\r\n    reducer,\r\n  });\r\n}\r\n","export default function getAuthConfig() {\r\n  return {\r\n    domain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    clientId: process.env.REACT_APP_AUTH_CLIENTID,\r\n    redirectUri: window.location.origin + \"/projects\",\r\n  };\r\n}\r\n"],"sourceRoot":""}